@using Inventory_Entities
@model Product
@{
    ViewData["Title"] = "Create New Product";
}

<div class="container mt-4">


    <h1>@ViewData["Title"]</h1>
    <form asp-action="Create" method="post" enctype="multipart/form-data">
        <div class="mb-3">
            <label asp-for="productName" class="form-label"></label>
            <input asp-for="productName" class="form-control" />
        </div>
        <div class="mb-3">
            <label asp-for="productDescription" class="form-label"></label>
            <input asp-for="productDescription" class="form-control" />
        </div>
        <div class="mb-3">
            <label asp-for="productPrice" class="form-label"></label>
            <input asp-for="productPrice" class="form-control" type="number" step="0.01" />
        </div>
        <div class="mb-3">
            <label asp-for="categoryId"></label>
            <select asp-for="categoryId" class="form-control" asp-items="@ViewBag.categoryList"></select>
        </div>

        <div>
            <input type="file" asp-for="clientFile" onchange="loadFile(event)" />
            <img id="myImg" height="50px" />
        </div>

        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="mb-3">
            <button type="submit" class="btn btn-primary">Create</button>
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>

    </form>
</div>





@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
    <script>
        var loadFile = function(event)
        {
            var reader = new FileReader();
            reader.onload=function()
            {
                var myImg = document.getElementById('myImg');
                myImg.src = reader.result;
            }
            reader.readAsDataURL(event.target.files[0]);
        }
    </script>
}