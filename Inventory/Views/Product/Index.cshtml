@using Inventory_Entities
@model IEnumerable<Product>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@{
    ViewData["Title"] = "Products";
}

<div class="container mt-4">
    <h1 style="text-decoration: underline;">@ViewData["Title"]</h1>
    @if (User.IsInRole(RolesNames.roleAdmin))
    {
        <div class="mb-3">
            <a asp-action="Create" class="btn btn-primary"><i class="bi bi-plus-circle-dotted"></i>&nbsp Create New Product</a>
        </div>
    }

    <table class="table table-hover table-striped ">
        <thead class="table-dark">
            <tr class="table-primary">
                <th class="text-center" scope="col">Product Name</th>
                <th class="text-center" scope="col">Product Price</th>
                <th class="text-center" scope="col">Product Quantity</th> <!-- Added Quantity Column -->
               @*  <th class="text-center" scope="col">Product Category</th>
                <th class="text-center" scope="col">Product Image</th>
                <th class="text-center" scope="col">Inventory</th> <!-- New column for Inventory -->
                <th class="text-center" scope="col">Created By</th> <!-- New column for Created By --> *@
                <th class="text-center" scope="col" class="text-center">Actions</th>

            </tr>
        </thead>
        <tbody>
            @if (!Model.Any())
            {
                <tr>
                        <td colspan="8" class="text-center">No products found.</td> <!-- Updated colspan -->
                </tr>
            }
            else
            {
                foreach (var product in Model)
                {
                    <tr>
                        <td class="text-center" scope="row">@(!string.IsNullOrEmpty(product.productName) ? product.productName : "No Product Name")</td>
                        <td class="text-center" scope="row">@((product.productPrice > 0) ? product.productPrice.ToString("C") : "No Price")</td>
                        <td class="text-center" scope="row">
                            @((product.productQuantity > 0) ? product.productQuantity.ToString() : "Out of Stock")
                        </td> <!-- Display Product Quantity -->
                       @*  <td class="text-center" scope="row">@((product.category != null && !string.IsNullOrEmpty(product.category.categoryName)) ? product.category.categoryName : "No Category")</td>
                        <td class="text-center">
                            @if (!string.IsNullOrEmpty(product.imageSrc))
                            {
                                <img src="@product.imageSrc" style="width:48px" class="img-thumbnail" />
                            }
                            else
                            {
                                <span>No Image</span>
                            }
                        </td>
                        <td class="text-center">@((product.inventory != null && !string.IsNullOrEmpty(product.inventory.InventoryName)) ? product.inventory.InventoryName : "No Inventory")</td> <!-- Display Inventory Name -->
                        <td class="text-center">@(!string.IsNullOrEmpty(product.CreatedBy) ? product.CreatedBy : "No Creator")</td> <!-- Display Created By --> *@
                        @if (User.IsInRole(RolesNames.roleAdmin) || User.IsInRole(RolesNames.roleSupplier))
                        {
                            <td class="text-center">
                                <a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" class="btn btn-sm btn-info">
                                    <i class="bi bi-info-circle"></i> &nbsp Details
                                </a>
                                <a asp-controller="Product" asp-action="Edit" asp-route-id="@product.Id" class="btn btn-sm btn-success">
                                    <i class="bi bi-pencil"></i> Edit
                                </a>
                                <a asp-controller="Product" asp-action="Delete" asp-route-id="@product.Id" class="btn btn-sm btn-danger">
                                    <i class="bi bi-trash3"></i> Delete
                                </a>
                            </td>

                        }
                        else
                        {
                            <td class="text-center">
                                <a asp-controller="Product" asp-action="Details" asp-route-id="@product.Id" class="btn btn-sm btn-info">
                                    <i class="bi bi-info-circle"></i> &nbsp Details
                                </a>
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
</div>


<style>
    /* CSS for the transition effect */
    .animated-container {
        transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
        opacity: 0; /* Initially hidden */
        transform: translateY(30px); /* Start position for the animation */
    }

        .animated-container.show {
            opacity: 1; /* Fully visible */
            transform: translateY(0); /* Move to original position */
        }
</style>
